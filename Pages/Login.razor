@page "/"
@using BlazorAppConsumoAPI.Models;
@using BlazorAppConsumoAPI.Services;
@inject APITTHH _api


<div class="container" onclick="onclick">
    <div class="top"></div>
    <div class="bottom"></div>
    <div class="center">
                <h3 class="title">Inicio de sesion</h3>
                <div class="input-field">
                    <i class="fas fa-user"></i>
                    <input type="text" placeholder="Usuario" />
                </div>
                <div class="input-field">
                    <i class="fas fa-lock"></i>
                    <input type="password" placeholder="Contraseña" />
                </div>
                <div class="input-field">
                    <i class="fas fa-chevron-down arrow-icon"></i>
                    <select id="opciones" name="opciones">
                        <option value="" disabled selected hidden>Seleccione Emisor</option>

                        @if (emisores != null)
                        {
                            @foreach(var emisor in emisores)
                            {
                                <option value="@emisor.Codigo">@emisor.Codigo. @emisor.NombreEmisor</option>
                            }
                        }
                        else
                        {
                            <option>Error al cargar</option>
                        }

                    </select>
                </div>

                <input type="submit" value="Ingresar" class="btn solid" />
                <div class="social-media">
                </div>
            
        </div>
    </div>

    <style>
    

*, *:before, *:after {
  box-sizing: border-box;
}

body {
  min-height: 50vh;
  font-family: "Raleway", sans-serif;
}

.container {
  position: center;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.container:hover .top:before, .container:hover .top:after, .container:hover .bottom:before, .container:hover .bottom:after, .container:active .top:before, .container:active .top:after, .container:active .bottom:before, .container:active .bottom:after {
  margin-left: 250px;
  transform-origin: -250px 50%;
  transition-delay: 0s;
}
.container:hover .center, .container:active .center {
  opacity: 1;
  transition-delay: 0.2s;
}

.top:before, .top:after, .bottom:before, .bottom:after {
  content: "";
  display: block;
  position: absolute;
  width: 200vmax;
  height: 200vmax;
  top: 50%;
  left: 50%;
  margin-top: -100vmax;
  transform-origin: 0 50%;
  transition: all 0.5s cubic-bezier(0.445, 0.05, 0, 1);
  z-index: 10;
  opacity: 0.65;
  transition-delay: 0.2s;
}

.top:before {
  transform: rotate(45deg);
  background: #e46569;
}
.top:after {
  transform: rotate(135deg);
  background: #ecaf81;
}

.bottom:before {
  transform: rotate(-45deg);
  background: #60b8d4;
}
.bottom:after {
  transform: rotate(-135deg);
  background: #3745b5;
}

.center {
  position: absolute;
  width: 400px;
  height: 400px;
  top: 50%;
  left: 50%;
  margin-left: -200px;
  margin-top: -200px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 30px;
  opacity: 0;
  transition: all 0.5s cubic-bezier(0.445, 0.05, 0, 1);
  transition-delay: 0s;
  color: #333;
}

}</style>

@code {
    private List<Emisor> emisores;

    protected override async Task OnInitializedAsync()
    {
        emisores = await _api.GetEmisores();
    }
}


